diff --git a/snap/snapcraft.yaml b/snap/snapcraft.yaml
index 7a7d07f..a2819cd 100755
--- a/snap/snapcraft.yaml
+++ b/snap/snapcraft.yaml
@@ -13,7 +13,6 @@ base: core24
 compression: lzo
 
 platforms:
-  arm64:
   amd64:
 
 layout:
@@ -32,18 +31,30 @@ slots:
     bus: session
     name: org.gimp.GIMP.UI
 
+plugs:
+  intel-npu:
+    interface: custom-device
+    custom-device: intel-npu-device
+  npu-libs:
+    interface: content
+    content: npu-libs-2404
+    target: $SNAP/usr/lib/npu-libs-2404
+    #default-provider: intel-npu-driver # must be in latest/stable channel so commenting for now
+  process-control:
+    interface: process-control
+
 environment:
   GI_TYPELIB_PATH: $SNAP/gnome-platform/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gjs/girepository-1.0:$GI_TYPELIB_PATH
-  LD_LIBRARY_PATH: $SNAP/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas
+  LD_LIBRARY_PATH: $SNAP/lib:$SNAP/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/gnome-platform/usr/lib:$SNAP/gnome-platform/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/lapack:$SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/blas:$SNAP/usr/lib/npu-libs-2404:$SNAP/usr/local/lib
   # Ensure the gmic plugin can correctly locate the QT plugins
   QT_PLUGIN_PATH: $SNAP/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/qt6/plugins
+  PYTHONPATH: $SNAP/gnome-platform/usr/lib/python3.12:$SNAP/gimpenv3/lib/python3.12/site-packages:$PYTHONPATH
 
 apps:
   gimp:
     command: usr/bin/gimp-2.99
     extensions: [gnome]
     desktop: usr/share/applications/gimp.desktop
-
     common-id: org.gimp.GIMP
     slots:
       - dbus-gimp
@@ -54,13 +65,17 @@ apps:
       - network
       - removable-media
       - unity7
+      - intel-npu
+      - npu-libs
+      - process-control
 
 parts:
   babl:
     plugin: meson
     source: https://gitlab.gnome.org/GNOME/babl.git
     # TODO: replace this with a tag on next release
-    source-commit: c5f97c86224a473cc3fea231f17adef84580f2cc
+    #source-commit: c5f97c86224a473cc3fea231f17adef84580f2cc
+    source-tag: BABL_0_1_98
     meson-parameters:
       - --prefix=/usr
       - --buildtype=release
@@ -73,7 +88,8 @@ parts:
       - babl
     source: https://gitlab.gnome.org/GNOME/gegl.git
     # TODO: replace this with a tag on next release
-    source-commit: d540df2ad27c06891271d96247f915073b042a3e
+    #source-commit: d540df2ad27c06891271d96247f915073b042a3e
+    source-tag: GEGL_0_4_46
     plugin: meson
     meson-parameters:
       - --prefix=/usr
@@ -129,7 +145,8 @@ parts:
       - gegl
     plugin: meson
     source: https://gitlab.gnome.org/GNOME/gimp.git
-    source-commit: a92388c433da868c5d84b14362f7a8151d287ad7
+    #source-commit: a92388c433da868c5d84b14362f7a8151d287ad7
+    source-tag: GIMP_2_99_16
     override-pull: |
       # TODO: remove `craftctl default` and use this when 2.99.19 actually releases
       #   tag="$(echo "GIMP_${SNAPCRAFT_PROJECT_VERSION}" | tr "." "_")"
@@ -147,6 +164,13 @@ parts:
       - -Denable-default-bin=enabled
       - -Drelocatable-bundle=yes
       - -Dlibunwind=true
+    override-stage: |
+      echo "python=/usr/bin/python3" >  $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/interpreters/pygimp.interp
+      echo "python3=/usr/bin/python3" >>  $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/interpreters/pygimp.interp
+      echo "/usr/bin/python=/usr/bin/python3" >>  $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/interpreters/pygimp.interp
+      echo "/usr/bin/python3=/usr/bin/python3" >>  $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/interpreters/pygimp.interp
+      echo ":Python:E::py::python3:" >>  $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/interpreters/pygimp.interp
+      craftctl default
     build-environment:
       - BABL_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/babl-0.1
       - GEGL_PATH: $CRAFT_STAGE/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gegl-0.4
@@ -218,54 +242,68 @@ parts:
       - mypaint-data
       - poppler-data
 
-  gmic:
+  openvino-plugin:
     after: [gimp]
     plugin: nil
-    override-pull: |
-      VERSION=v.3.4.2
-      git clone -b "$VERSION" https://github.com/GreycLab/gmic.git
-      git clone -b "$VERSION" https://github.com/GreycLab/CImg.git
-      git clone -b "$VERSION" https://github.com/c-koi/gmic-qt.git
-
-      # Force this extra online fetch to happen during the pull phase.
-      # This build takes a long time on Launchpad, and if we wait until
-      # the build phase, by the time we get there the proxy token has
-      # expired - so force it to happen here.
-      wget -qO gmic/src/gmic_stdlib_community.h "https://gmic.eu/gmic_stdlib_community$(echo "${VERSION}" | tr -d "v.").h"
-    build-environment:
-      - QT_SELECT: qt6
+    source: https://github.com/intel/openvino-ai-plugins-gimp.git
+    source-tag: v2.99-R3.1
+    #build-environment:
+    #  - PATH: /snap/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+    #  - PYTHONPATH: ""
     build-packages:
-      - pkg-config
-      - qmake6-bin
-      - qt6-base-dev
-      - qt6-l10n-tools
-      - qt6-tools-dev
-      - qt6-wayland-dev
-      - qtchooser
-      - wget
+      - rsync
     stage-packages:
-      - libcurl4
-      - libdouble-conversion3
-      - libfftw3-bin
-      - libffi8
-      - libgraphicsmagick-q16-3
-      - libgraphicsmagick++-q16-12
-      - libjpeg-turbo8
-      - libopencv-core406t64
-      - libopencv-highgui406t64
-      - libopencv-video406t64
-      - libopenexr-3-1-30
-      - libpng16-16
-      - libqt6core6t64
-      - libqt6gui6t64
-      - libqt6network6t64
-      - libqt6widgets6t64
-      - qt6-wayland
+      - ocl-icd-libopencl1
+      - wget
     override-build: |
-      qtchooser -install qt6 "$(which qmake6)" || true
-      make -C gmic/src CImg.h gmic_stdlib_community.h
-      cd gmic-qt
-      qmake HOST=gimp3
-      make
-      install -Dm 0755 $CRAFT_PART_BUILD/gmic-qt/gmic_gimp_qt \
-        $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/3.0/plug-ins/gmic_gimp_qt/gmic_gimp_qt
+      set -e
+      which python3
+      python3 --version
+      python3 -m pip install --break-system-packages --user virtualenv
+      chmod +x install.sh
+      echo "1 2 3 4 0" | ./install.sh --install_models
+      mkdir -p $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/
+      cp -r $HOME/.config/GIMP/2.99/plug-ins/* $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/
+      sed -i "/self.core.set_property({'CACHE_DIR': os.path.join(model, 'cache')})/d" $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/openvino_utils/tools/openvino_common/models_ov/stable_diffusion_engine.py
+      sed -i "/try_enable_npu_turbo(device, self.core)/d" $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/openvino_utils/tools/openvino_common/models_ov/stable_diffusion_engine.py
+      sed -i 's/if "NPU" in device:/if "STOP" in device:/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/openvino_utils/tools/openvino_common/models_ov/stable_diffusion_engine.py
+      sed -i 's/sd_option_cache = os.path.join(weight_path, ".."/sd_option_cache = os.path.join("."/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/stable_diffusion_ov/stable_diffusion_ov.py
+      sed -i 's/os.path.join(weight_path, "..", "gimp_openvino_run_sd.json"/os.path.join(".", "gimp_openvino_run_sd.json"/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/openvino_utils/tools/stable_diffusion_ov_server.py
+      sed -i 's/file_new_for_path(os.path.join(weight_path, ".."/file_new_for_path(os.path.join("."/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/stable_diffusion_ov/stable_diffusion_ov.py
+      sed -i 's/cv2.imwrite(os.path.join(weight_path, ".."/cv2.imwrite(os.path.join("."/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/openvino_utils/tools/stable_diffusion_ov_server.py
+      sed -i 's/DeviceEnum(supported_modes)/DeviceEnum(["CPU", "Balanced", "NPU"])/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/stable_diffusion_ov/stable_diffusion_ov.py
+      sed -i 's/Power Mode/Device/g' $CRAFT_PART_INSTALL/usr/lib/$CRAFT_ARCH_TRIPLET_BUILD_FOR/gimp/2.99/plug-ins/stable_diffusion_ov/stable_diffusion_ov.py
+      mkdir -p $CRAFT_PART_BUILD/mms_tmp
+      rsync -a $CRAFT_PART_BUILD/mms_tmp $CRAFT_PART_INSTALL/.
+      rsync -a /root/parts/openvino-plugin/gimpenv3 $CRAFT_PART_INSTALL/.
+      rsync -a /root/openvino-ai-plugins-gimp/weights $CRAFT_PART_INSTALL/.
+      echo "{" > $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      echo '      "power modes supported": "yes",' >> $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      echo '      "npu": ["NPU","NPU","NPU","NPU"],' >> $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      echo '      "balanced": ["NPU","CPU","NPU","NPU"],' >> $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      echo '      "cpu": ["CPU","CPU","CPU","CPU"]' >> $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      echo "}" >> $CRAFT_PART_INSTALL/weights/stable-diffusion-ov/stable-diffusion-1.5/square_int8/config.json
+      # Note, the following section installs Intel graphics packages in an attempt to
+      # enable the Intel GPU in the plugin. It did not work but I will keep this here
+      # as a starting point for adding GPU support in the future.
+      mkdir -p neo
+      cd neo
+      wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.17537.20/intel-igc-core_1.0.17537.20_amd64.deb
+      wget https://github.com/intel/intel-graphics-compiler/releases/download/igc-1.0.17537.20/intel-igc-opencl_1.0.17537.20_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-level-zero-gpu-dbgsym_1.3.30872.22_amd64.ddeb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-level-zero-gpu-legacy1-dbgsym_1.3.30872.22_amd64.ddeb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-level-zero-gpu-legacy1_1.3.30872.22_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-level-zero-gpu_1.3.30872.22_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-opencl-icd-dbgsym_24.35.30872.22_amd64.ddeb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-opencl-icd-legacy1-dbgsym_24.35.30872.22_amd64.ddeb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-opencl-icd-legacy1_24.35.30872.22_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/intel-opencl-icd_24.35.30872.22_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/libigdgmm12_22.5.0_amd64.deb
+      wget https://github.com/intel/compute-runtime/releases/download/24.35.30872.22/ww35.sum
+      sha256sum -c ww35.sum
+      dpkg --root=$CRAFT_PART_INSTALL --force-all -i *.deb
+      craftctl default
+    override-stage: |
+      echo '{"python_path": "/usr/bin/python3", "weight_path": "/snap/gimp/current/weights", "supported_devices": ["CPU", "NPU", "GPU"]}' > $CRAFT_PART_INSTALL/usr/lib/x86_64-linux-gnu/gimp/2.99/plug-ins/openvino_utils/tools/gimp_openvino_config.json
+      craftctl default
+
